import{aL as t,Q as p,S as o,ab as c,U as s,ac as n,ae as l,aR as a,C as u}from"./framework-f6bde8f8.js";const i={},r=s("h1",{id:"java-aes-加密-解密",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#java-aes-加密-解密","aria-hidden":"true"},"#"),n(" java aes 加密/解密")],-1),k=a(`<p>aes 对key的长度有要求 下面是key填充方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>fun <span class="token function">fillKey</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token class-name">ByteArray</span> <span class="token punctuation">{</span>
    val random <span class="token operator">=</span> <span class="token class-name">SecureRandom</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;SHA1PRNG&quot;</span><span class="token punctuation">)</span>
    random<span class="token punctuation">.</span><span class="token function">setSeed</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    val generator <span class="token operator">=</span> <span class="token class-name">KeyGenerator</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;AES&quot;</span><span class="token punctuation">)</span>
    generator<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>random<span class="token punctuation">)</span>
    <span class="token keyword">return</span> generator<span class="token punctuation">.</span><span class="token function">generateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encoded
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),d={href:"https://hutool.cn/docs/#/",target:"_blank",rel:"noopener noreferrer"},v=a(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
fun <span class="token function">ktAes</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> source<span class="token operator">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
    val keyBytes <span class="token operator">=</span> <span class="token function">fillKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token class-name">SecureUtil</span><span class="token punctuation">.</span><span class="token function">aes</span><span class="token punctuation">(</span>keyBytes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encryptBase64</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

fun <span class="token function">ktDeAes</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> source<span class="token operator">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
    val keyBytes <span class="token operator">=</span> <span class="token function">fillKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token class-name">SecureUtil</span><span class="token punctuation">.</span><span class="token function">aes</span><span class="token punctuation">(</span>keyBytes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decryptStr</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function m(f,y){const e=u("ExternalLinkIcon");return p(),o("div",null,[r,c(" more "),k,s("p",null,[n("基于"),s("a",d,[n("hutool"),l(e)]),n("封装的工具类")]),v])}const g=t(i,[["render",m],["__file","java_aes.html.vue"]]);export{g as default};
