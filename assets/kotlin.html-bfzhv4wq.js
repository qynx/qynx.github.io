import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as h,o as n}from"./app-CArtVO7n.js";const t={};function e(l,s){return n(),a("div",null,s[0]||(s[0]=[h(`<h1 id="kotlin" tabindex="-1"><a class="header-anchor" href="#kotlin"><span>kotlin</span></a></h1><h2 id="if-条件" tabindex="-1"><a class="header-anchor" href="#if-条件"><span>if 条件</span></a></h2><div class="language-java" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">fun </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">maxOf</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Int) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b) a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b</span></span></code></pre></div><h2 id="enum" tabindex="-1"><a class="header-anchor" href="#enum"><span>enum</span></a></h2><h3 id="枚举构造函数" tabindex="-1"><a class="header-anchor" href="#枚举构造函数"><span>枚举构造函数</span></a></h3><div class="language-java" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> TestEnum(val value: Int) {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    FIRST</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre></div><h3 id="枚举值遍历" tabindex="-1"><a class="header-anchor" href="#枚举值遍历"><span>枚举值遍历</span></a></h3><div class="language-java" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (label in </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">TestEnum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">values</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    println</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">labal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toStirng</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre></div><h2 id="jackson" tabindex="-1"><a class="header-anchor" href="#jackson"><span>jackson</span></a></h2><h3 id="jsonproperty" tabindex="-1"><a class="header-anchor" href="#jsonproperty"><span>JsonProperty</span></a></h3><p>使用 <code>@JsonProperty</code> 标识类的属性时和java 不一样要用 <code>@get:JsonProperty</code></p><p>详情见 <a href="https://stackoverflow.com/questions/47982148/usage-of-jackson-jsonproperty-annotation-for-kotlin-data-classes" target="_blank" rel="noopener noreferrer">stackoverflow-47982148</a></p><h2 id="高阶函数" tabindex="-1"><a class="header-anchor" href="#高阶函数"><span>高阶函数</span></a></h2><h3 id="let" tabindex="-1"><a class="header-anchor" href="#let"><span>let</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>作用域函数 取最后一行作为返回值</p></div><h2 id="null-判断" tabindex="-1"><a class="header-anchor" href="#null-判断"><span>null 判断</span></a></h2><h3 id="safe-null" tabindex="-1"><a class="header-anchor" href="#safe-null"><span>safe null</span></a></h3><div class="language-java" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// a 不为 null时执行</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">apply</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre></div><h3 id="null" tabindex="-1"><a class="header-anchor" href="#null"><span>null ||</span></a></h3><div class="language-java" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// a为null时默认值</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">?:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span></span></code></pre></div><h2 id="协程" tabindex="-1"><a class="header-anchor" href="#协程"><span>协程</span></a></h2><h3 id="completablefuture-转-协程" tabindex="-1"><a class="header-anchor" href="#completablefuture-转-协程"><span>CompletableFuture 转 协程</span></a></h3><p>前置依赖</p><div class="language-groovy" data-highlighter="shiki" data-ext="groovy" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">implementation</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;org.jetbrains.kotlinx:kotlinx-coroutines-jdk8&#39;</span></span></code></pre></div><p>直接调用 await 方法</p><div class="language-java" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">CompletableFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">supplyAsync</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                    try</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                        Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">                    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ex</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">: </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                        ex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">printStackTrace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">                    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">                }</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre></div><h2 id="class" tabindex="-1"><a class="header-anchor" href="#class"><span>class</span></a></h2><h3 id="静态成员" tabindex="-1"><a class="header-anchor" href="#静态成员"><span>静态成员</span></a></h3><div class="language-java" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    companion object {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">        val b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;com/&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div>`,29)]))}const r=i(t,[["render",e]]),d=JSON.parse('{"path":"/posts/%E5%85%A5%E9%97%A8/kotlin.html","title":"kotlin","lang":"zh-CN","frontmatter":{"icon":"blog","date":"2023-06-22T00:00:00.000Z","category":["入门"],"tag":["kotlin","语法"],"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E5%85%A5%E9%97%A8/kotlin.html"}],["meta",{"property":"og:site_name","content":"清明在躬 氣志如神"}],["meta",{"property":"og:title","content":"kotlin"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-28T15:29:58.000Z"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"语法"}],["meta",{"property":"article:published_time","content":"2023-06-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-28T15:29:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"kotlin\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-28T15:29:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"希文\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"git":{"createdTime":1687514784000,"updatedTime":1690558198000,"contributors":[{"name":"zsl","username":"zsl","email":"zslngu@163.com","commits":4,"url":"https://github.com/zsl"}],"changelog":[{"hash":"585365bc04f2c9be5dd8ae7b43c927691709cb20","time":1690558198000,"email":"zslngu@163.com","author":"zsl","message":"调整icon"},{"hash":"705b0655dc2cb32c557e62983de974f8311970a7","time":1688315867000,"email":"zslngu@163.com","author":"zsl","message":"add 邮箱发送"},{"hash":"20215b595992cc41e59a27991c2a78e053f1e15d","time":1687540974000,"email":"zslngu@163.com","author":"zsl","message":"kotlin"},{"hash":"395c16712d5af51c85855c8410baf8410bd2138d","time":1687514784000,"email":"zslngu@163.com","author":"zsl","message":"2023/06/23 18:06"}]},"readingTime":{"minutes":0.63,"words":190},"filePathRelative":"posts/入门/kotlin.md","localizedDate":"2023年6月22日","excerpt":"\\n"}');export{r as comp,d as data};
